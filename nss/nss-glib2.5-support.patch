--- a/nss/nss/lib/freebl/verified/kremlib.h	2018-06-21 11:24:45.000000000 +0200
+++ b/nss/nss/lib/freebl/verified/kremlib.h	2018-10-09 01:59:41.260215665 +0200
@@ -183,7 +183,49 @@
 
 /* ... for Linux */
 #if defined(__linux__) || defined(__CYGWIN__)
-#include <endian.h>
+/* Define necessary macros for the header to expose all fields. */
+#   define _BSD_SOURCE 
+#   define __USE_BSD
+#   define _DEFAULT_SOURCE
+#   include <endian.h>
+#   include <features.h>
+/* See http://linux.die.net/man/3/endian */
+#   if !defined(__GLIBC__) || !defined(__GLIBC_MINOR__) || ((__GLIBC__ < 2) || ((__GLIBC__ == 2) && (__GLIBC_MINOR__ < 9))) 
+#       include <arpa/inet.h>
+#       if defined(__BYTE_ORDER) && (__BYTE_ORDER == __LITTLE_ENDIAN)
+#           define htobe16(x) htons(x)
+#           define htole16(x) (x)
+#           define be16toh(x) ntohs(x)
+#           define le16toh(x) (x)
+
+#           define htobe32(x) htonl(x)
+#           define htole32(x) (x)
+#           define be32toh(x) ntohl(x)
+#           define le32toh(x) (x)
+
+#           define htobe64(x) (((uint64_t)htonl(((uint32_t)(((uint64_t)(x)) >> 32)))) | (((uint64_t)htonl(((uint32_t)(x)))) << 32))
+#           define htole64(x) (x)
+#           define be64toh(x) (((uint64_t)ntohl(((uint32_t)(((uint64_t)(x)) >> 32)))) | (((uint64_t)ntohl(((uint32_t)(x)))) << 32))
+#           define le64toh(x) (x)
+#       elif defined(__BYTE_ORDER) && (__BYTE_ORDER == __BIG_ENDIAN)
+#           define htobe16(x) (x)
+#           define htole16(x) ((((((uint16_t)(x)) >> 8))|((((uint16_t)(x)) << 8)))
+#           define be16toh(x) (x)
+#           define le16toh(x) ((((((uint16_t)(x)) >> 8))|((((uint16_t)(x)) << 8)))
+
+#           define htobe32(x) (x)
+#           define htole32(x) (((uint32_t)htole16(((uint16_t)(((uint32_t)(x)) >> 16)))) | (((uint32_t)htole16(((uint16_t)(x)))) << 16))
+#           define be32toh(x) (x)
+#           define le32toh(x) (((uint32_t)le16toh(((uint16_t)(((uint32_t)(x)) >> 16)))) | (((uint32_t)le16toh(((uint16_t)(x)))) << 16))
+
+#           define htobe64(x) (x)
+#           define htole64(x) (((uint64_t)htole32(((uint32_t)(((uint64_t)(x)) >> 32)))) | (((uint64_t)htole32(((uint32_t)(x)))) << 32))
+#           define be64toh(x) (x)
+#           define le64toh(x) (((uint64_t)le32toh(((uint32_t)(((uint64_t)(x)) >> 32)))) | (((uint64_t)le32toh(((uint32_t)(x)))) << 32))
+#       else
+#           error Byte Order not supported or not defined.
+#       endif
+#   endif
 
 /* ... for OSX */
 #elif defined(__APPLE__)
